create TABLE IF NOT EXISTS Users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  email VARCHAR NOT NULL,
  name VARCHAR NOT NULL,
  CONSTRAINT pk_users PRIMARY KEY (id)
);
create TABLE IF NOT EXISTS Categories (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR NOT NULL,
  CONSTRAINT pk_categories PRIMARY KEY (id)
);
create TABLE IF NOT EXISTS Locations (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  lat BIGINT,
  lon BIGINT,
  CONSTRAINT pk_locations PRIMARY KEY (id)
);
create TABLE IF NOT EXISTS Events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  annotation TEXT NOT NULL,
  category BIGINT,
  confirmed_Requests BIGINT,
  created_On timestamp,
  description TEXT,
  event_Date timestamp,
  initiator BIGINT,
  location BIGINT,
  paid BOOLEAN,
  participant_Limit BIGINT,
  published_On timestamp,
  request_Moderation BOOLEAN,
  state VARCHAR,
  title VARCHAR,
  views BIGINT,
  rate BIGINT,
  CONSTRAINT pk_events PRIMARY KEY (id),
  CONSTRAINT fk_event_to_category FOREIGN KEY(category) REFERENCES Categories(id) ON DELETE CASCADE,
  CONSTRAINT fk_event_to_user FOREIGN KEY(initiator) REFERENCES Users(id) ON DELETE CASCADE,
  CONSTRAINT fk_event_to_location FOREIGN KEY(location) REFERENCES Locations(id) ON DELETE CASCADE
);

create TABLE IF NOT EXISTS Compilations (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  pinned BOOLEAN,
  title VARCHAR NOT NULL,
  CONSTRAINT pk_compilations PRIMARY KEY (id)
);

create TABLE IF NOT EXISTS Requests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  created timestamp,
  event BIGINT,
  requester BIGINT,
  status VARCHAR,
  CONSTRAINT pk_requests PRIMARY KEY (id),
  CONSTRAINT fk_requests_to_event FOREIGN KEY(event) REFERENCES Events(id) ON DELETE CASCADE,
  CONSTRAINT fk_requests_to_user FOREIGN KEY(requester) REFERENCES Users(id) ON DELETE CASCADE
);
create TABLE IF NOT EXISTS Event_Compil (
  id_event BIGINT REFERENCES Events(id) ON DELETE CASCADE,
  id_compilation BIGINT REFERENCES Compilations(id) ON DELETE CASCADE
);
create TABLE IF NOT EXISTS Likes (
  user_id BIGINT,
  event_id BIGINT,
  like_event BOOLEAN,
  CONSTRAINT pk_like PRIMARY KEY (user_id, event_id),
  CONSTRAINT fk_like_to_user FOREIGN KEY(user_id) REFERENCES Users(id),
  CONSTRAINT fk_like_to_event FOREIGN KEY(event_id) REFERENCES Events(id)
);